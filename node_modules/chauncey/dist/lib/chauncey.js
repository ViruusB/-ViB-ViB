'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _https = require('https');

var _https2 = _interopRequireDefault(_https);

var _concatStream = require('concat-stream');

var _concatStream2 = _interopRequireDefault(_concatStream);

var _findNearestFile = require('find-nearest-file');

var _findNearestFile2 = _interopRequireDefault(_findNearestFile);

var _habitat = require('habitat');

var _habitat2 = _interopRequireDefault(_habitat);

exports['default'] = function (_ref) {
  var url = _ref.url;
  var token = _ref.token;
  var _ref$done = _ref.done;
  var done = _ref$done === undefined ? function () {} : _ref$done;

  try {
    token = token || findToken();
  } catch (error) {
    return done(error);
  }

  _https2['default'].get('https://api-ssl.bitly.com/v3/shorten?access_token=' + token + '&longUrl=' + url + '&format=txt', function (res) {
    return res.pipe((0, _concatStream2['default'])({ encoding: 'string' }, function (res) {
      return done(null, res);
    }));
  }).on('error', done);
};

function findToken() {
  _habitat2['default'].load((0, _findNearestFile2['default'])('.chaunceyrc'));
  var token = _habitat2['default'].get('BITLY_ACCESS_TOKEN');
  if (!token) throw new Error('BITLY_ACCESS_TOKEN not found');
  return token;
}
module.exports = exports['default'];